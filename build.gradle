apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply from: 'gradle/integration-tests.gradle'

// Pull in the bintray gradle plugin for uploading releases
buildscript {
    repositories { jcenter() }
    dependencies { classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5' }
}

group = 'com.lookout'
version = '2.0.3'

if (System.env.RELEASE != '1') {
    version = "${version}-SNAPSHOT"
}
sourceCompatibility = '1.7'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile gradleApi()
    compile localGroovy()


    testCompile 'junit:junit:4.+'
    testCompile ("org.spockframework:spock-core:0.7-groovy-${gradle.gradleVersion.startsWith('1.')?'1.8':'2.0'}") {
        exclude module : 'groovy-all'
    }
    integrationTestCompile ("org.spockframework:spock-core:0.7-groovy-${gradle.gradleVersion.startsWith('1.')?'1.8':'2.0'}") {
        exclude module : 'groovy-all'
    }

}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat "full"
    }

    systemProperties TESTROOT : new File(buildDir,'tmp/test/unittests').absolutePath
    systemProperties TEST_SCRIPT_DIR : new File(projectDir,'src/test/resources/scripts').absolutePath
    systemProperties 'logback.configurationFile' : new File(projectDir,'src/test/resources/logback-test.xml').absolutePath

}

integrationTest {
    systemProperties TESTROOT : new File(buildDir,'tmp/test/integration-tests').absolutePath
    systemProperties TEST_SCRIPT_DIR : new File(projectDir,'src/integTest/resources/scripts').absolutePath
    systemProperties 'logback.configurationFile' : new File(projectDir,'src/integTest/resources/logback-test.xml').absolutePath

    if(gradle.startParameter.isOffline()) {
        systemProperties 'TESTS_ARE_OFFLINE' : '1'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

// Ensure we don't fail in CI or on a system without these values set in
// ~/.gradle/gradle.properties
if( !hasProperty( 'bintrayUser' ) )
  ext.bintrayUser = ''

if( !hasProperty( 'bintrayKey' ) )
  ext.bintrayKey = ''

bintray {
    user = project.bintrayUser
    key = project.bintrayKey
    publish = true
    dryRun = false
    configurations = ['archives']

    pkg {
        repo = 'jruby'
        name = 'jruby-gradle-plugin'
        labels = ['jruby']

        version {
            name = project.version
            vcsTag = "v${project.version}"
            attributes = ['gradle-plugin' : 'com.lookout.jruby:com.lookout:jruby-gradle-plugin']
            desc = "The purpose of plugin is to encapsulate useful Gradle functionality for JRuby projects. Use of this plugin replaces the need for both Bundler and Warbler in JRuby projects."

        }
    }
}
bintrayUpload.dependsOn assemble

// vim: ft=groovy
