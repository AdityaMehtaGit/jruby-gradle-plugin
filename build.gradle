buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
        classpath 'org.ysb33r.gradle:gradletest:0.5.4'
        classpath "org.ajoberstar:gradle-git:1.2.0"
    }
}

group = 'com.github.jruby-gradle'
version = '1.1.4'
defaultTasks 'check', 'assemble'

if (!releaseBuild) {
    version = "${version}-SNAPSHOT"
}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'codenarc'
    apply plugin: 'maven'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'org.ysb33r.gradletest'
    apply plugin: 'provided-base'

    repositories {
        jcenter()
    }

    dependencies {
        compile new GradleDist(project, '2.0').asFileTree
    }

    codenarc {
        sourceSets = [sourceSets.main]
        configFile = file("${rootProject.projectDir}/gradle/codenarc.xml")
    }

    test {
        testLogging {
            showStandardStreams = true
            exceptionFormat "full"
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    plugins.withType(JavaPlugin) {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7


        project.tasks.withType(JavaCompile) { task ->
            task.sourceCompatibility = project.sourceCompatibility
            task.targetCompatibility = project.targetCompatibility
        }

        project.tasks.withType(GroovyCompile) { task ->
            task.sourceCompatibility = project.sourceCompatibility
            task.targetCompatibility = project.targetCompatibility
        }
    }
    install.dependsOn check
}

task release(type: Exec) {
    description 'Create and upload a release'
    dependsOn subprojects.collect { ":${it.name}:bintrayUpload" }, 'docs:publishGhPages'
    commandLine 'git', 'tag', "v${project.version}"
}
